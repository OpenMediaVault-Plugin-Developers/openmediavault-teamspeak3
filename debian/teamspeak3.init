#!/bin/sh
### BEGIN INIT INFO
# Provides:          Teamspeak3
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Teamspeak3 at boot time
# Description:       Start Teamspeak.
### END INIT INFO
###################################################
#
#
TEAMSPEAK_DIRECTORY="/opt/teamspeak3"
options="inifile=ts3server.ini"
INIT="/etc/init.d/teamspeak3"

if [ ! -d $TEAMSPEAK_DIRECTORY ]; then
    exit
fi
cd $TEAMSPEAK_DIRECTORY
if [ -e ts3server_linux_x86 ]; then
        if [ -z "`uname | grep Linux`" -o ! -z "`uname -m | grep 64`" ]; then
                echo "Do you have the right TS3 Server package for your system? You have: `uname` `uname -m`, not Linux i386."
        fi
        BINARYNAME="ts3server_linux_x86"
elif [ -e ts3server_linux_amd64 ]; then
        if [ -z "`uname | grep Linux`" -o -z "`uname -m | grep 64`" ]; then
                echo "Do you have the right TS3 Server package for your system? You have: `uname` `uname -m`, not Linux x86_64."
        fi
        BINARYNAME="ts3server_linux_amd64"
else
        echo "Could not locate binary file, aborting"
        exit 5
fi

case "$1" in
        start)
                if [ -e ts3server.pid ]; then
                        if ( kill -0 $(cat ts3server.pid) 2> /dev/null ); then
                                echo "The server is already running, try restart or stop"
                                exit 1
                        else
                                echo "ts3server.pid found, but no server running. Possibly your previously started server crashed"
                                echo "Please view the logfile for details."
                                rm ts3server.pid
                        fi
                fi
                if [ "${UID}" = "0" ]; then
                        echo WARNING ! For security reasons we advise: DO NOT RUN THE SERVER AS ROOT
                        c=1
                        while [ "$c" -le 10 ]; do
                                echo -n "!"
                                sleep 1
                                c=$(($c+1))
                        done
                        echo "!"
                fi
                echo "Starting the TeamSpeak 3 server"
                if [ -e "$BINARYNAME" ]; then
                        if [ ! -x "$BINARYNAME" ]; then
                                echo "${BINARYNAME} is not executable, trying to set it"
                                chmod u+x "${BINARYNAME}"
                        fi
                        if [ -x "$BINARYNAME" ]; then
                                export LD_LIBRARY_PATH="${LIBRARYPATH}:${LD_LIBRARY_PATH}"
                                "./${BINARYNAME}" ${options} > /dev/null &
                                echo $! > ts3server.pid
                                echo "TeamSpeak 3 server started, for details please view the log file"
                        else
                                echo "${BINARNAME} is not exectuable, cannot start TeamSpeak 3 server"
                        fi
                else
                        echo "Could not find binary, aborting"
                        exit 5
                fi
        ;;
        stop)
                if [ -e ts3server.pid ]; then
                        echo -n "Stopping the TeamSpeak 3 server"
                        if ( kill -TERM $(cat ts3server.pid) 2> /dev/null ); then
                                c=1
                                while [ "$c" -le 300 ]; do
                                        if ( kill -0 $(cat ts3server.pid) 2> /dev/null ); then
                                                echo -n "."
                                                sleep 1
                                        else
                                                break
                                        fi
                                        c=$((++c))
                                done
                        fi
                        if ( kill -0 $(cat ts3server.pid) 2> /dev/null ); then
                                echo "Server is not shutting down cleanly - killing"
                                kill -KILL $(cat ts3server.pid)
                        else
                                echo "done"
                        fi
                        rm ts3server.pid
                else
                        echo "No server running (ts3server.pid is missing)"
                fi
        ;;
        restart)
                $0 stop && $0 start || exit 1
        ;;
        status)
                if [ -e ts3server.pid ]; then
                        if ( kill -0 $(cat ts3server.pid) 2> /dev/null ); then
                                echo "Server is running"
                        else
                                echo "Server seems to have died"
                        fi
                else
                        echo "No server running (ts3server.pid is missing)"
                fi
        ;;
        *)
                echo "Usage: ${0} {start|stop|restart|status}"
                exit 2
esac
exit 0




























##################################################
# NO CHANGES BELOW. ELSE ITS ON YOUR OWN RISK
#
realbin="${TEAMSPEAK_DIRECTORY}/${progbin}"
LIBRARYPATH="${TEAMSPEAK_DIRECTORY}"
#su -l ts3 -c "export LD_LIBRARY_PATH='/opt/teamspeak3/'"
export LD_LIBRARY_PATH=$LIBRARYPATH:$LD_LIBRARY_PATH
# Checking if ts3 is there and executable

if [ -f "${TEAMSPEAK_DIRECTORY}/${progbin}" ]; then
        if [ ! -x "${TEAMSPEAK_DIRECTORY}/${progbin}" ]; then
                echo "${progbin} file is not executable"
                echo "Please fix this and try again"
                exit 2
        fi
else
        #echo "Stopping teamspeak3"
        #echo "cannot find ${progbin}!"
        #echo "If this is not correct edit the start script"
        exit 2
fi

get_virtual_servers() {
( echo open ${host} ${port}
sleep 0.5
echo serverlist
sleep 0.5
echo quit ) | telnet 2> /dev/null | grep -e virtual
}

stop_virtual_server() {
( echo open ${host} ${port}
sleep 0.5
echo login ${user} ${passwd}
sleep 0.5
echo serverstop sid=${1}
sleep 0.5
echo quit ) | telnet 2> /dev/null | grep -e dummy
}

start_virtual_server() {
( echo open ${host} ${port}
sleep 0.5
echo login ${user} ${passwd}
sleep 0.5
echo serverstart sid=${1}
sleep 0.5
echo quit ) | telnet 2> /dev/null |grep -e dummy
}

case "$1" in
        start)
        #/usr/share/openmediavault/mkconf/teamspeak3
        echo -n "Starting $progname dedicated server: "
        cd ${TEAMSPEAK_DIRECTORY}
        "./${progbin}" ${options} > /dev/null &> /dev/null &
        #$TEAMSPEAK_DIRECTORY/$progbin $options > /dev/null 2>&1
;;
stop)
        echo -n "Stopping $progname dedicated server: "
        if ! $(ps -ef |grep $progbin| grep -v grep | awk '{print $8}')="./ts3server_linux_amd64"; then
        #if ! ps -ef |grep $progbin|awk -F" " -v prog=${progbin} 'BEGIN {status=1} ; $8 == prog {status=0} ; END {exit status}' ; then
                echo "server not running or crashed."
        else
                pid=`ps -ef |grep "${progbin}"|awk -F" " -v prog=${progbin} 'BEGIN {status=1} ; $8 == prog { print $2 } ; END {exit status}'`
                kill -9 ${pid}
                if ! ps -ef |grep ${TEAMSPEAK_DIRECTORY}/${progbin}|awk -F" " -v prog=${TEAMSPEAK_DIRECTORY}/${progbin} 'BEGIN {status=1} ; $8 == prog {status=0} ; END {exit status}' ; then
                        screen -S ts3bot -X quit|echo "stopped"
                        exit 0
                else
                        echo "unable to stop server or server crashed"
                fi
        fi
;;
status)
        echo -n "`date +"%Y-%m-%d %H:%M:%S"` Checking $progname dedicated server status: "
        if ! ps -ef |grep "${realbin}"|awk -F" " -v prog=${realbin} 'BEGIN {status=1} ; $8 == prog {status=0} ; END {exit status}' ; then
                echo "server not running or crashed"
        else
                echo "Server still running."
        fi
;;
check)
        echo -n "Checking $progname dedicated server status: "
        if ! ps -ef |grep "${realbin}"|awk -F" " -v prog=${realbin} 'BEGIN {status=1} ; $8 == prog {status=0} ; END {exit status}' ; then
                echo "offline"
        else
                echo "online"
        fi
;;
update)
;;
restart)
echo "Restarting $progname dedicated server... "
$0 stop && $0 start
;;
debug)
echo -n "Starting debug mode for $progname dedicated server: "
if ps -ef |grep "${realbin}"|awk -F" " -v prog=${realbin} 'BEGIN {status=1} ; $8 == prog {status=0} ; END {exit status}' ; then
        echo "already active"
        exit 3
else
        echo "--DEBUG will appear on screen!"
        echo "--Hit CTRL+C to kill the server!"
        ${TEAMSPEAK_DIRECTORY}/${progbin} ${options}
fi
;;
*)
echo "Usage: $0 {start|stop|restart|status|check|debug|update|manage}"
esac

