#!/bin/sh
### BEGIN INIT INFO
# Provides:          Teamspeak3
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Teamspeak3 at boot time
# Description:       Start Teamspeak.
### END INIT INFO
###################################################
#
#
TEAMSPEAK_DIRECTORY="/opt/teamspeak3"
options="inifile=ts3server.ini"
INIT="/etc/init.d/teamspeak3"
PID=$(ps aux|grep ./[t]s3server| awk '{print $2}')

if [ ! -d $TEAMSPEAK_DIRECTORY ]; then
    if [ $1 = "status" ]; then
        exit 1
    fi
    exit 1
fi
cd $TEAMSPEAK_DIRECTORY
if [ -e ts3server_linux_x86 ]; then
        if [ -z "`uname | grep Linux`" -o ! -z "`uname -m | grep 64`" ]; then
                echo "Do you have the right TS3 Server package for your system? You have: `uname` `uname -m`, not Linux i386."
        fi
        BINARYNAME="ts3server_linux_x86"
elif [ -e ts3server_linux_amd64 ]; then
        if [ -z "`uname | grep Linux`" -o -z "`uname -m | grep 64`" ]; then
                echo "Do you have the right TS3 Server package for your system? You have: `uname` `uname -m`, not Linux x86_64."
        fi
        BINARYNAME="ts3server_linux_amd64"
elif [ -e ts3server ]; then
        if [ -z "`uname | grep Linux`" -o -z "`uname -m | grep 64`" ]; then
                echo "Do you have the right TS3 Server package for your system? You have: `uname` `uname -m`, not Linux x86_64."
        fi
        BINARYNAME="ts3server"
else
        echo "Could not locate binary file, aborting"
        exit 1
fi

case "$1" in
        start)
                if ( kill -0 $PID 2> /dev/null ); then
                    echo "The server is already running, try restart or stop"
                    exit 0
                fi
                if [ "${UID}" = "0" ]; then
                        echo WARNING ! For security reasons we advise: DO NOT RUN THE SERVER AS ROOT
                        c=1
                        while [ "$c" -le 10 ]; do
                                echo -n "!"
                                sleep 1
                                c=$(($c+1))
                        done
                        echo "!"
                fi
                echo "Starting the TeamSpeak 3 server"
                if [ -e "$BINARYNAME" ]; then
                        if [ ! -x "$BINARYNAME" ]; then
                                echo "${BINARYNAME} is not executable, trying to set it"
                                chmod u+x "${BINARYNAME}"
                        fi
                        if [ -x "$BINARYNAME" ]; then
                                export LD_LIBRARY_PATH="${LIBRARYPATH}:${LD_LIBRARY_PATH}"
                                "./${BINARYNAME}" ${options} > /dev/null &
                                echo $! > ts3server.pid
                                echo "TeamSpeak 3 server started, for details please view the log file"
                        else
                                echo "${BINARNAME} is not exectuable, cannot start TeamSpeak 3 server"
                        fi
                else
                        echo "Could not find binary, aborting"
                        exit 1
                fi
        ;;
        stop)
                if ( kill -0 $PID 2> /dev/null ); then
                        echo -n "Stopping the TeamSpeak 3 server"
                        if ( kill -TERM $PID 2> /dev/null ); then
                                c=1
                                while [ "$c" -le 300 ]; do
                                        if ( kill -0 $PID 2> /dev/null ); then
                                                echo -n "."
                                                sleep 1
                                        else
                                                break
                                        fi
                                        c=$((++c))
                                done
                        fi
                        if ( kill -0 $PID 2> /dev/null ); then
                                echo "Server is not shutting down cleanly - killing"
                                kill -KILL $PID
                        else
                                echo "done"
                        fi
                else
                        echo "No server running"
                fi
        ;;
        restart)
                $0 stop && $0 start || exit 1
        ;;
        status)
                if ( kill -0 $PID 2> /dev/null ); then
                    echo "Server is running"
                    exit 0
                else
                    echo "No server running"
                    exit 1
                fi
        ;;
        *)
                echo "Usage: ${0} {start|stop|restart|status}"
                exit 2
esac
exit 0
